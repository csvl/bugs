<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="/media/kdam/Data/UCL/code/Project2/Project2/samples/add/add.c" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;limits.h&gt;</cpp:file></cpp:include>

<function pos:start="3:1" pos:end="9:1"><type pos:start="3:1" pos:end="3:3"><name pos:start="3:1" pos:end="3:3">int</name></type> <name pos:start="3:5" pos:end="3:7">add</name><parameter_list pos:start="3:8" pos:end="3:21">(<parameter pos:start="3:9" pos:end="3:13"><decl pos:start="3:9" pos:end="3:13"><type pos:start="3:9" pos:end="3:13"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:13">a</name></decl></parameter>, <parameter pos:start="3:16" pos:end="3:20"><decl pos:start="3:16" pos:end="3:20"><type pos:start="3:16" pos:end="3:20"><name pos:start="3:16" pos:end="3:18">int</name></type> <name pos:start="3:20" pos:end="3:20">b</name></decl></parameter>)</parameter_list> <block pos:start="3:23" pos:end="9:1">{<block_content pos:start="4:9" pos:end="8:22">
	<decl_stmt pos:start="4:9" pos:end="4:19"><decl pos:start="4:9" pos:end="4:18"><type pos:start="4:9" pos:end="4:11"><name pos:start="4:9" pos:end="4:11">int</name></type> <name pos:start="4:13" pos:end="4:18">result</name></decl>;</decl_stmt>
	<if_stmt>if((!(a &gt; 0 &amp;&amp; b &gt; INT_MAX - a))) { </if_stmt><comment type="line" pos:start="5:9" pos:end="5:15">//ERROR</comment>
	<expr_stmt pos:start="6:9" pos:end="6:21"><expr pos:start="6:9" pos:end="6:20"><name pos:start="6:9" pos:end="6:14">result</name> <operator pos:start="6:16" pos:end="6:16">=</operator> <name pos:start="6:18" pos:end="6:18">a</name><operator pos:start="6:19" pos:end="6:19">+</operator><name pos:start="6:20" pos:end="6:20">b</name></expr>;</expr_stmt>

	<expr>} </expr><return pos:start="8:9" pos:end="8:22">return <expr pos:start="8:16" pos:end="8:21"><name pos:start="8:16" pos:end="8:21">result</name></expr>;</return>
</block_content>}</block></function>

<function pos:start="11:1" pos:end="13:1"><type pos:start="11:1" pos:end="11:3"><name pos:start="11:1" pos:end="11:3">int</name></type> <name pos:start="11:5" pos:end="11:8">main</name><parameter_list pos:start="11:9" pos:end="11:10">()</parameter_list> <block pos:start="11:12" pos:end="13:1">{<block_content pos:start="12:9" pos:end="12:36">
	<decl_stmt pos:start="12:9" pos:end="12:36"><decl pos:start="12:9" pos:end="12:35"><type pos:start="12:9" pos:end="12:11"><name pos:start="12:9" pos:end="12:11">int</name></type> <name pos:start="12:13" pos:end="12:15">res</name> <init pos:start="12:17" pos:end="12:35">= <expr pos:start="12:19" pos:end="12:35"><call pos:start="12:19" pos:end="12:35"><name pos:start="12:19" pos:end="12:21">add</name><argument_list pos:start="12:22" pos:end="12:35">(<argument pos:start="12:23" pos:end="12:32"><expr pos:start="12:23" pos:end="12:32"><literal type="number" pos:start="12:23" pos:end="12:32">2147483647</literal></expr></argument>,<argument pos:start="12:34" pos:end="12:34"><expr pos:start="12:34" pos:end="12:34"><literal type="number" pos:start="12:34" pos:end="12:34">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
</block_content>}</block></function>
</unit>
