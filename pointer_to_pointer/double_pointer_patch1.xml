<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="/media/kdam/Data/UCL/code/Project2/Project2/samples/double_pointer/double_pointer.c" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:18">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:18">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;time.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:19">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:19">&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="4:1" pos:end="4:19">#<cpp:directive pos:start="4:2" pos:end="4:8">include</cpp:directive> <cpp:file pos:start="4:10" pos:end="4:19">&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:define pos:start="6:1" pos:end="6:28">#<cpp:directive pos:start="6:2" pos:end="6:7">define</cpp:directive> <cpp:macro pos:start="6:9" pos:end="6:25"><name pos:start="6:9" pos:end="6:25">NUMBER_OF_STRINGS</name></cpp:macro> <cpp:value pos:start="6:27" pos:end="6:28">10</cpp:value></cpp:define>
<cpp:define pos:start="7:1" pos:end="7:27">#<cpp:directive pos:start="7:2" pos:end="7:7">define</cpp:directive> <cpp:macro pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:24">DICTIONNARY_SIZE</name></cpp:macro> <cpp:value pos:start="7:26" pos:end="7:27">50</cpp:value></cpp:define>
<cpp:define pos:start="8:1" pos:end="8:26">#<cpp:directive pos:start="8:2" pos:end="8:7">define</cpp:directive> <cpp:macro pos:start="8:9" pos:end="8:23"><name pos:start="8:9" pos:end="8:23">MAX_STRING_SIZE</name></cpp:macro> <cpp:value pos:start="8:25" pos:end="8:26">15</cpp:value></cpp:define> 

<decl_stmt pos:start="10:1" pos:end="62:2"><decl pos:start="10:1" pos:end="62:1"><type pos:start="10:1" pos:end="10:4"><name pos:start="10:1" pos:end="10:4">char</name></type> <name pos:start="10:6" pos:end="10:51"><name pos:start="10:6" pos:end="10:16">dictionnary</name><index pos:start="10:17" pos:end="10:34">[<expr pos:start="10:18" pos:end="10:33"><name pos:start="10:18" pos:end="10:33">DICTIONNARY_SIZE</name></expr>]</index><index pos:start="10:35" pos:end="10:51">[<expr pos:start="10:36" pos:end="10:50"><name pos:start="10:36" pos:end="10:50">MAX_STRING_SIZE</name></expr>]</index></name> <init pos:start="10:53" pos:end="62:1">=
<expr pos:start="11:1" pos:end="62:1"><block pos:start="11:1" pos:end="62:1">{ 
	<expr pos:start="12:9" pos:end="12:19"><literal type="string" pos:start="12:9" pos:end="12:19">"allowance"</literal></expr>,
	<expr pos:start="13:9" pos:end="13:16"><literal type="string" pos:start="13:9" pos:end="13:16">"frozen"</literal></expr>,
	<expr pos:start="14:9" pos:end="14:15"><literal type="string" pos:start="14:9" pos:end="14:15">"slump"</literal></expr>,
	<expr pos:start="15:9" pos:end="15:15"><literal type="string" pos:start="15:9" pos:end="15:15">"trail"</literal></expr>,
	<expr pos:start="16:9" pos:end="16:18"><literal type="string" pos:start="16:9" pos:end="16:18">"restrict"</literal></expr>,
	<expr pos:start="17:9" pos:end="17:19"><literal type="string" pos:start="17:9" pos:end="17:19">"residence"</literal></expr>,
	<expr pos:start="18:9" pos:end="18:18"><literal type="string" pos:start="18:9" pos:end="18:18">"language"</literal></expr>,
	<expr pos:start="19:9" pos:end="19:21"><literal type="string" pos:start="19:9" pos:end="19:21">"anniversary"</literal></expr>,
	<expr pos:start="20:9" pos:end="20:16"><literal type="string" pos:start="20:9" pos:end="20:16">"museum"</literal></expr>,
	<expr pos:start="21:9" pos:end="21:14"><literal type="string" pos:start="21:9" pos:end="21:14">"acid"</literal></expr>,
	<expr pos:start="22:9" pos:end="22:14"><literal type="string" pos:start="22:9" pos:end="22:14">"worm"</literal></expr>,
	<expr pos:start="23:9" pos:end="23:16"><literal type="string" pos:start="23:9" pos:end="23:16">"latest"</literal></expr>,
	<expr pos:start="24:9" pos:end="24:17"><literal type="string" pos:start="24:9" pos:end="24:17">"costume"</literal></expr>,
	<expr pos:start="25:9" pos:end="25:16"><literal type="string" pos:start="25:9" pos:end="25:16">"praise"</literal></expr>,
	<expr pos:start="26:9" pos:end="26:13"><literal type="string" pos:start="26:9" pos:end="26:13">"dog"</literal></expr>,
	<expr pos:start="27:9" pos:end="27:18"><literal type="string" pos:start="27:9" pos:end="27:18">"function"</literal></expr>,
	<expr pos:start="28:9" pos:end="28:19"><literal type="string" pos:start="28:9" pos:end="28:19">"recording"</literal></expr>,
	<expr pos:start="29:9" pos:end="29:20"><literal type="string" pos:start="29:9" pos:end="29:20">"houseplant"</literal></expr>,
	<expr pos:start="30:9" pos:end="30:14"><literal type="string" pos:start="30:9" pos:end="30:14">"arch"</literal></expr>,
	<expr pos:start="31:9" pos:end="31:16"><literal type="string" pos:start="31:9" pos:end="31:16">"mobile"</literal></expr>,
	<expr pos:start="32:9" pos:end="32:19"><literal type="string" pos:start="32:9" pos:end="32:19">"accompany"</literal></expr>,
	<expr pos:start="33:9" pos:end="33:19"><literal type="string" pos:start="33:9" pos:end="33:19">"committee"</literal></expr>,
	<expr pos:start="34:9" pos:end="34:15"><literal type="string" pos:start="34:9" pos:end="34:15">"sweep"</literal></expr>,
	<expr pos:start="35:9" pos:end="35:17"><literal type="string" pos:start="35:9" pos:end="35:17">"evening"</literal></expr>,
	<expr pos:start="36:9" pos:end="36:19"><literal type="string" pos:start="36:9" pos:end="36:19">"undertake"</literal></expr>,
	<expr pos:start="37:9" pos:end="37:16"><literal type="string" pos:start="37:9" pos:end="37:16">"redeem"</literal></expr>,
	<expr pos:start="38:9" pos:end="38:18"><literal type="string" pos:start="38:9" pos:end="38:18">"industry"</literal></expr>,
	<expr pos:start="39:9" pos:end="39:17"><literal type="string" pos:start="39:9" pos:end="39:17">"parking"</literal></expr>,
	<expr pos:start="40:9" pos:end="40:13"><literal type="string" pos:start="40:9" pos:end="40:13">"tax"</literal></expr>,
	<expr pos:start="41:9" pos:end="41:21"><literal type="string" pos:start="41:9" pos:end="41:21">"cooperation"</literal></expr>,
	<expr pos:start="42:9" pos:end="42:14"><literal type="string" pos:start="42:9" pos:end="42:14">"item"</literal></expr>,
	<expr pos:start="43:9" pos:end="43:16"><literal type="string" pos:start="43:9" pos:end="43:16">"filter"</literal></expr>,
	<expr pos:start="44:9" pos:end="44:17"><literal type="string" pos:start="44:9" pos:end="44:17">"process"</literal></expr>,
	<expr pos:start="45:9" pos:end="45:18"><literal type="string" pos:start="45:9" pos:end="45:18">"medieval"</literal></expr>,
	<expr pos:start="46:9" pos:end="46:22"><literal type="string" pos:start="46:9" pos:end="46:22">"constitution"</literal></expr>,
	<expr pos:start="47:9" pos:end="47:17"><literal type="string" pos:start="47:9" pos:end="47:17">"example"</literal></expr>,
	<expr pos:start="48:9" pos:end="48:19"><literal type="string" pos:start="48:9" pos:end="48:19">"eliminate"</literal></expr>,
	<expr pos:start="49:9" pos:end="49:15"><literal type="string" pos:start="49:9" pos:end="49:15">"spite"</literal></expr>,
	<expr pos:start="50:9" pos:end="50:15"><literal type="string" pos:start="50:9" pos:end="50:15">"X-ray"</literal></expr>,
	<expr pos:start="51:9" pos:end="51:16"><literal type="string" pos:start="51:9" pos:end="51:16">"reward"</literal></expr>,
	<expr pos:start="52:9" pos:end="52:21"><literal type="string" pos:start="52:9" pos:end="52:21">"inspiration"</literal></expr>,
	<expr pos:start="53:9" pos:end="53:17"><literal type="string" pos:start="53:9" pos:end="53:17">"concern"</literal></expr>,
	<expr pos:start="54:9" pos:end="54:19"><literal type="string" pos:start="54:9" pos:end="54:19">"secretion"</literal></expr>,
	<expr pos:start="55:9" pos:end="55:20"><literal type="string" pos:start="55:9" pos:end="55:20">"reflection"</literal></expr>,
	<expr pos:start="56:9" pos:end="56:19"><literal type="string" pos:start="56:9" pos:end="56:19">"consensus"</literal></expr>,
	<expr pos:start="57:9" pos:end="57:18"><literal type="string" pos:start="57:9" pos:end="57:18">"marathon"</literal></expr>,
	<expr pos:start="58:9" pos:end="58:14"><literal type="string" pos:start="58:9" pos:end="58:14">"flag"</literal></expr>,
	<expr pos:start="59:9" pos:end="59:17"><literal type="string" pos:start="59:9" pos:end="59:17">"impulse"</literal></expr>,
	<expr pos:start="60:9" pos:end="60:16"><literal type="string" pos:start="60:9" pos:end="60:16">"manual"</literal></expr>,
	<expr pos:start="61:9" pos:end="61:15"><literal type="string" pos:start="61:9" pos:end="61:15">"buggy"</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function pos:start="64:1" pos:end="98:1"><type pos:start="64:1" pos:end="64:3"><name pos:start="64:1" pos:end="64:3">int</name></type> <name pos:start="64:5" pos:end="64:8">main</name><parameter_list pos:start="64:9" pos:end="64:31">(<parameter pos:start="64:10" pos:end="64:17"><decl pos:start="64:10" pos:end="64:17"><type pos:start="64:10" pos:end="64:17"><name pos:start="64:10" pos:end="64:12">int</name></type> <name pos:start="64:14" pos:end="64:17">argc</name></decl></parameter>, <parameter pos:start="64:20" pos:end="64:30"><decl pos:start="64:20" pos:end="64:30"><type pos:start="64:20" pos:end="64:30"><name pos:start="64:20" pos:end="64:23">char</name> <modifier pos:start="64:25" pos:end="64:25">*</modifier><modifier pos:start="64:26" pos:end="64:26">*</modifier></type><name pos:start="64:27" pos:end="64:30">argv</name></decl></parameter>)</parameter_list> <block pos:start="64:33" pos:end="98:1">{<block_content pos:start="66:9" pos:end="91:38">
	<comment type="block" pos:start="65:9" pos:end="65:100">/* The array we're going to use (at least it's clear that's it's a pointer on pointer :)) */</comment>
	<decl_stmt pos:start="66:9" pos:end="66:23"><decl pos:start="66:9" pos:end="66:22"><type pos:start="66:9" pos:end="66:15"><name pos:start="66:9" pos:end="66:12">char</name> <modifier pos:start="66:14" pos:end="66:14">*</modifier><modifier pos:start="66:15" pos:end="66:15">*</modifier></type><name pos:start="66:16" pos:end="66:22">myArray</name></decl>;</decl_stmt>
	<decl_stmt pos:start="67:9" pos:end="67:28"><decl pos:start="67:9" pos:end="67:27"><type pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:12">char</name> <modifier pos:start="67:14" pos:end="67:14">*</modifier></type><name pos:start="67:15" pos:end="67:27">choosenString</name></decl>;</decl_stmt>

	<expr_stmt pos:start="69:9" pos:end="69:60"><expr pos:start="69:9" pos:end="69:59"><name pos:start="69:9" pos:end="69:15">myArray</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:59"><name pos:start="69:19" pos:end="69:24">malloc</name><argument_list pos:start="69:25" pos:end="69:59">(<argument pos:start="69:26" pos:end="69:58"><expr pos:start="69:26" pos:end="69:58"><name pos:start="69:26" pos:end="69:42">NUMBER_OF_STRINGS</name> <operator pos:start="69:44" pos:end="69:44">*</operator> <sizeof pos:start="69:46" pos:end="69:58">sizeof<argument_list pos:start="69:52" pos:end="69:58">(<argument pos:start="69:53" pos:end="69:57"><expr pos:start="69:53" pos:end="69:57"><name pos:start="69:53" pos:end="69:56">char</name><operator pos:start="69:57" pos:end="69:57">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt pos:start="70:9" pos:end="70:26"><expr pos:start="70:9" pos:end="70:25"><call pos:start="70:9" pos:end="70:25"><name pos:start="70:9" pos:end="70:13">srand</name><argument_list pos:start="70:14" pos:end="70:25">(<argument pos:start="70:15" pos:end="70:24"><expr pos:start="70:15" pos:end="70:24"><call pos:start="70:15" pos:end="70:24"><name pos:start="70:15" pos:end="70:18">time</name><argument_list pos:start="70:19" pos:end="70:24">(<argument pos:start="70:20" pos:end="70:23"><expr pos:start="70:20" pos:end="70:23"><name pos:start="70:20" pos:end="70:23">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block" pos:start="72:9" pos:end="72:83">/* Let's fill the arry with NUMBER_OF_STRINGS words from the dictionnary */</comment>
	<for pos:start="73:9" pos:end="77:9">for <control pos:start="73:13" pos:end="73:51">(<init pos:start="73:14" pos:end="73:23"><decl pos:start="73:14" pos:end="73:22"><type pos:start="73:14" pos:end="73:16"><name pos:start="73:14" pos:end="73:16">int</name></type> <name pos:start="73:18" pos:end="73:18">i</name> <init pos:start="73:20" pos:end="73:22">= <expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr></init></decl>;</init> <condition pos:start="73:25" pos:end="73:46"><expr pos:start="73:25" pos:end="73:45"><name pos:start="73:25" pos:end="73:25">i</name> <operator pos:start="73:27" pos:end="73:27">&lt;</operator> <name pos:start="73:29" pos:end="73:45">NUMBER_OF_STRINGS</name></expr>;</condition> <incr pos:start="73:48" pos:end="73:50"><expr pos:start="73:48" pos:end="73:50"><name pos:start="73:48" pos:end="73:48">i</name><operator pos:start="73:49" pos:end="73:50">++</operator></expr></incr>)</control> <block pos:start="73:53" pos:end="77:9">{<block_content pos:start="74:17" pos:end="76:88">
		<decl_stmt pos:start="74:17" pos:end="74:41"><decl pos:start="74:17" pos:end="74:40"><type pos:start="74:17" pos:end="74:19"><name pos:start="74:17" pos:end="74:19">int</name></type> <name pos:start="74:21" pos:end="74:26">strNbr</name> <init pos:start="74:28" pos:end="74:40">= <expr pos:start="74:30" pos:end="74:40"><call pos:start="74:30" pos:end="74:35"><name pos:start="74:30" pos:end="74:33">rand</name><argument_list pos:start="74:34" pos:end="74:35">()</argument_list></call> <operator pos:start="74:37" pos:end="74:37">%</operator> <literal type="number" pos:start="74:39" pos:end="74:40">50</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="75:17" pos:end="75:84"><expr pos:start="75:17" pos:end="75:83"><name pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:23">myArray</name><index pos:start="75:24" pos:end="75:26">[<expr pos:start="75:25" pos:end="75:25"><name pos:start="75:25" pos:end="75:25">i</name></expr>]</index></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <call pos:start="75:30" pos:end="75:83"><name pos:start="75:30" pos:end="75:35">malloc</name><argument_list pos:start="75:36" pos:end="75:83">(<argument pos:start="75:37" pos:end="75:82"><expr pos:start="75:37" pos:end="75:82"><operator pos:start="75:37" pos:end="75:37">(</operator><call pos:start="75:38" pos:end="75:64"><name pos:start="75:38" pos:end="75:43">strlen</name><argument_list pos:start="75:44" pos:end="75:64">(<argument pos:start="75:45" pos:end="75:63"><expr pos:start="75:45" pos:end="75:63"><name pos:start="75:45" pos:end="75:63"><name pos:start="75:45" pos:end="75:55">dictionnary</name><index pos:start="75:56" pos:end="75:63">[<expr pos:start="75:57" pos:end="75:62"><name pos:start="75:57" pos:end="75:62">strNbr</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="75:65" pos:end="75:65">+</operator><literal type="number" pos:start="75:66" pos:end="75:66">1</literal><operator pos:start="75:67" pos:end="75:67">)</operator> <operator pos:start="75:69" pos:end="75:69">*</operator> <sizeof pos:start="75:71" pos:end="75:82">sizeof<argument_list pos:start="75:77" pos:end="75:82">(<argument pos:start="75:78" pos:end="75:81"><expr pos:start="75:78" pos:end="75:81"><name pos:start="75:78" pos:end="75:81">char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="76:17" pos:end="76:88"><expr pos:start="76:17" pos:end="76:87"><call pos:start="76:17" pos:end="76:87"><name pos:start="76:17" pos:end="76:23">strncpy</name><argument_list pos:start="76:24" pos:end="76:87">(<argument pos:start="76:25" pos:end="76:34"><expr pos:start="76:25" pos:end="76:34"><name pos:start="76:25" pos:end="76:34"><name pos:start="76:25" pos:end="76:31">myArray</name><index pos:start="76:32" pos:end="76:34">[<expr pos:start="76:33" pos:end="76:33"><name pos:start="76:33" pos:end="76:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="76:37" pos:end="76:55"><expr pos:start="76:37" pos:end="76:55"><name pos:start="76:37" pos:end="76:55"><name pos:start="76:37" pos:end="76:47">dictionnary</name><index pos:start="76:48" pos:end="76:55">[<expr pos:start="76:49" pos:end="76:54"><name pos:start="76:49" pos:end="76:54">strNbr</name></expr>]</index></name></expr></argument>, <argument pos:start="76:58" pos:end="76:86"><expr pos:start="76:58" pos:end="76:86"><call pos:start="76:58" pos:end="76:84"><name pos:start="76:58" pos:end="76:63">strlen</name><argument_list pos:start="76:64" pos:end="76:84">(<argument pos:start="76:65" pos:end="76:83"><expr pos:start="76:65" pos:end="76:83"><name pos:start="76:65" pos:end="76:83"><name pos:start="76:65" pos:end="76:75">dictionnary</name><index pos:start="76:76" pos:end="76:83">[<expr pos:start="76:77" pos:end="76:82"><name pos:start="76:77" pos:end="76:82">strNbr</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="76:85" pos:end="76:85">+</operator><literal type="number" pos:start="76:86" pos:end="76:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></for>
	
	<comment type="block" pos:start="79:9" pos:end="79:60">/* Are we going to insert a null value somewhere? */</comment>
	<decl_stmt pos:start="80:9" pos:end="80:37"><decl pos:start="80:9" pos:end="80:36"><type pos:start="80:9" pos:end="80:11"><name pos:start="80:9" pos:end="80:11">int</name></type> <name pos:start="80:13" pos:end="80:22">insertNull</name> <init pos:start="80:24" pos:end="80:36">= <expr pos:start="80:26" pos:end="80:36"><call pos:start="80:26" pos:end="80:31"><name pos:start="80:26" pos:end="80:29">rand</name><argument_list pos:start="80:30" pos:end="80:31">()</argument_list></call> <operator pos:start="80:33" pos:end="80:33">%</operator> <literal>1</literal></expr></init></decl>;</decl_stmt>
	
	<comment type="block" pos:start="82:9" pos:end="82:56">/* If so let's insert it at a random position */</comment>
	<if_stmt pos:start="83:9" pos:end="85:9"><if pos:start="83:9" pos:end="85:9">if <condition pos:start="83:12" pos:end="83:28">(<expr pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:22">insertNull</name> <operator pos:start="83:24" pos:end="83:25">==</operator> <literal type="number" pos:start="83:27" pos:end="83:27">1</literal></expr>)</condition> <block pos:start="83:30" pos:end="85:9">{<block_content pos:start="84:17" pos:end="84:59">
		<expr_stmt pos:start="84:17" pos:end="84:59"><expr pos:start="84:17" pos:end="84:58"><name pos:start="84:17" pos:end="84:51"><name pos:start="84:17" pos:end="84:23">myArray</name><index pos:start="84:24" pos:end="84:51">[<expr pos:start="84:25" pos:end="84:50"><call pos:start="84:25" pos:end="84:30"><name pos:start="84:25" pos:end="84:28">rand</name><argument_list pos:start="84:29" pos:end="84:30">()</argument_list></call> <operator pos:start="84:32" pos:end="84:32">%</operator> <name pos:start="84:34" pos:end="84:50">NUMBER_OF_STRINGS</name></expr>]</index></name> <operator pos:start="84:53" pos:end="84:53">=</operator> <name pos:start="84:55" pos:end="84:58">NULL</name></expr>;</expr_stmt>
	</block_content>}</block></if></if_stmt>

	<comment type="block" pos:start="87:9" pos:end="87:57">/* Now let's pick one of the value to print it */</comment>
	<expr_stmt pos:start="88:9" pos:end="88:60"><expr pos:start="88:9" pos:end="88:59"><name pos:start="88:9" pos:end="88:21">choosenString</name> <operator pos:start="88:23" pos:end="88:23">=</operator> <name pos:start="88:25" pos:end="88:59"><name pos:start="88:25" pos:end="88:31">myArray</name><index pos:start="88:32" pos:end="88:59">[<expr pos:start="88:33" pos:end="88:58"><call pos:start="88:33" pos:end="88:38"><name pos:start="88:33" pos:end="88:36">rand</name><argument_list pos:start="88:37" pos:end="88:38">()</argument_list></call> <operator pos:start="88:40" pos:end="88:40">%</operator> <name pos:start="88:42" pos:end="88:58">NUMBER_OF_STRINGS</name></expr>]</index></name></expr>;</expr_stmt>

	<comment type="block" pos:start="90:9" pos:end="90:30">/* Print that value */</comment>
	<expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><call pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:14">printf</name><argument_list pos:start="91:15" pos:end="91:37">(<argument pos:start="91:16" pos:end="91:21"><expr pos:start="91:16" pos:end="91:21"><literal type="string" pos:start="91:16" pos:end="91:21">"%s\n"</literal></expr></argument>, <argument pos:start="91:24" pos:end="91:36"><expr pos:start="91:24" pos:end="91:36"><name pos:start="91:24" pos:end="91:36">choosenString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="block" pos:start="93:9" pos:end="93:35">/* Let's print our array */</comment>
<comment type="line" pos:start="94:1" pos:end="94:42">//	printf("Content of the array:\n");</comment>
<comment type="line" pos:start="95:1" pos:end="95:53">//	for (int i = 0; i &lt; NUMBER_OF_STRINGS; i++) {</comment>
<comment type="line" pos:start="96:1" pos:end="96:83">//		printf("%d. %s\t%p\t%p\n", i, myArray[i], myArray[i], &amp;myArray[i]);</comment>
<comment type="line" pos:start="97:1" pos:end="97:9">//	}</comment>
</block_content>}</block></function>

</unit>
